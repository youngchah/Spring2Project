<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.ILoginMapper">
	
	<resultMap type="noticeMemberVO" id="noticeMemberMap">
	<id property="memNo" column="mem_no" />
	<result property="memNo" column="mem_no" />
	<result property="memId" column="mem_id" />
	<result property="memPw" column="mem_pw" />
	<result property="memName" column="mem_name" />
	<result property="memGender" column="mem_gender" />
	<result property="memEmail" column="mem_email" />
	<result property="memPhone" column="mem_phone" />
	<result property="memPostcode" column="mem_postcode" />
	<result property="memAddress1" column="mem_address1" />
	<result property="memAddress2" column="mem_address2" />
	<result property="memAgree" column="mem_agree" />
	<result property="memProfileimg" column="mem_profileimg" />
	<result property="memRegdate" column="mem_regdate"/>
	<result property="enabled" column="enabled"/>
	<collection property="authList" resultMap="noticeAuthMap"/>
	</resultMap>
	
	<resultMap type="noticeMemberAuthVO" id="noticeAuthMap">
		<result property="memNo" column="mem_no" />
		<result property="auth" column="auth" />
	</resultMap>
	
	<select id="idCheck" parameterType="string" resultType="noticeMemberVO">
		select mem_no, mem_id
		from noticemember
		where mem_id = #{memId}
	</select>
	
	<insert id="signup" parameterType="noticeMemberVO" useGeneratedKeys="true">
		<selectKey keyProperty="memNo" resultType="int" order="BEFORE">
			select seq_noticemember.nextval from dual
		</selectKey>
		insert into noticemember(
			mem_no, mem_id, mem_pw, mem_name, mem_gender, mem_email, mem_phone,
			mem_postcode, mem_address1, mem_address2, mem_agree, mem_profileimg,
			mem_regdate, enabled
		)values(
			#{memNo}, #{memId}, #{memPw}, #{memName}, #{memGender}, #{memEmail}, 
			#{memPhone},#{memPostcode}, #{memAddress1}, #{memAddress2}, #{memAgree}, 
			#{memProfileimg}, sysdate, '1'
		)
	</insert>
	
	<insert id="signupAuth" parameterType="int">
		insert into noticemember_auth(
			mem_no, auth
		)values(
			#{memNo}, 'ROLE_MEMBER'
		)
	</insert>
	
	<select id="loginCheck" parameterType="noticeMemberVO" resultType="noticeMemberVO">
		select
			MEM_NO, MEM_ID, MEM_PW, MEM_NAME,
			MEM_GENDER, MEM_EMAIL, MEM_PHONE,
			MEM_POSTCODE, MEM_ADDRESS1, MEM_ADDRESS2,
			MEM_AGREE, MEM_PROFILEIMG, MEM_REGDATE
		from noticemember
		where mem_id = #{memId}
		and mem_pw = #{memPw}
	</select>
	
	<select id="idForgetProcess" parameterType="noticeMemberVO" resultType="string">
		select
			MEM_ID
		from noticemember
		where mem_email = #{memEmail}
		and mem_name = #{memName}
		
	
	</select>
	
	<select id="pwForgetProcess" parameterType="noticeMemberVO" resultType="string">
		select
			MEM_PW
		from noticemember
		where mem_id = #{memId} 
		and mem_email = #{memEmail}
		and mem_name = #{memName}
		
	
	</select>
	
	<select id="readByUserId" parameterType="string" resultMap="noticeMemberMap">
		select
			m.mem_no, mem_id, mem_pw, mem_name, mem_gender, mem_email, mem_phone,
			mem_postcode, mem_address1, mem_address2, mem_agree, mem_profileimg,
			mem_regdate, enabled, a.auth
		from noticemember m left outer join noticemember_auth a on(m.mem_no = a.mem_no)
		where m.mem_id = #{memId}
	</select>
	
</mapper>